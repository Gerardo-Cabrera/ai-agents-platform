# =============================================================================
# PYTHON
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/
*.iml
*.ipr
*.iws

# =============================================================================
# FASTAPI / BACKEND SPECIFIC
# =============================================================================

# Environment variables
.env
.env.local
.env.development
.env.staging
.env.production
.env.test

# Database files
*.db
*.sqlite
*.sqlite3
*.db-journal

# Logs
logs/
*.log
*.log.*

# Uploads and temporary files
uploads/
temp/
tmp/
*.tmp
*.temp

# Cache
.cache/
cache/
__pycache__/

# Coverage reports
htmlcov/
.coverage
.coverage.*
coverage.xml
*.cover

# =============================================================================
# SECURITY
# =============================================================================

# API Keys and secrets
*.key
*.pem
*.p12
*.pfx
*.crt
*.csr
secrets/
.secrets

# SSL certificates
*.crt
*.key
*.pem
ssl/

# =============================================================================
# DEVELOPMENT
# =============================================================================

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# =============================================================================
# MONITORING AND METRICS
# =============================================================================

# Prometheus metrics
metrics/
prometheus.yml

# Grafana
grafana/
grafana-v*/

# =============================================================================
# DOCKER
# =============================================================================

# Docker files (if using Docker for development)
.dockerignore
docker-compose.override.yml

# =============================================================================
# TESTING
# =============================================================================

# Test files
test_*.py
*_test.py
tests/
.pytest_cache/

# =============================================================================
# BACKUP AND ARCHIVE
# =============================================================================

# Backup files
*.bak
*.backup
*.old
*.orig

# Archive files
*.tar
*.tar.gz
*.zip
*.rar
*.7z

# =============================================================================
# SPECIFIC TO THIS PROJECT
# =============================================================================

# ChromaDB
chroma_db/
*.chroma

# Data files
data/
*.csv
*.json
*.xlsx
*.xls

# Model files
models/
*.pkl
*.joblib
*.h5
*.onnx

# Agent specific
agents/
agent_cache/
agent_logs/

# System optimization
system_optimizer/
utils/system_optimizer.py

# Debug files
debug_env.py
debug_*.py

# =============================================================================
# RAILWAY SPECIFIC
# =============================================================================

# Railway local files
.railway/
railway.json.local

# =============================================================================
# MISC
# =============================================================================

# Temporary files
*.tmp
*.temp
temp_*
tmp_*

# Large files
*.large
*.huge

# Configuration overrides
config.local.py
settings.local.py 