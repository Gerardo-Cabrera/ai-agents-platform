services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: agent_ia
      POSTGRES_USER: agent_user
      POSTGRES_PASSWORD: agent_password
    ports:
      - "55432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.example
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_password@postgres:5432/agent_ia
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend/app:/app/app
    depends_on:
      - postgres
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery_worker:
    build: ./backend
    command: sh -c "cd /app && celery -A app.services.tasks:app worker --loglevel=info"
    volumes:
      - ./backend/app:/app/app
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://agent_user:agent_password@postgres:5432/agent_ia
      - REDIS_URL=redis://redis:6379

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

volumes:
  postgres_data:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - backend
      - frontend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"

volumes:
  postgres_data:
  grafana_data:
